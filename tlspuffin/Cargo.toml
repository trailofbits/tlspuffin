[package]
name = "tlspuffin"
version = "0.1.0"
authors = ["Maximilian Ammann <max@maxammann.org>"]
edition = "2021"

[features]
default = ["sancov_libafl", "introspection"]

# Lastest OpenSSL 1.1.1
openssl111 = [
    "openssl/vendored-openssl111", "openssl/no-rand", "openssl/weak-crypto", # We want to allow weak-crypto for FREAK
    "tls13",
    "tls12-session-resumption",
    "tls13-session-resumption",
    "deterministic", # Supported features by openssl111
    "claims",
    "openssl-binding",
    "transcript-extraction",
    "client-authentication-transcript-extraction"
]
openssl101f = [
    "openssl/vendored-openssl101f", "openssl/weak-crypto", # We want to allow weak-crypto for FREAK
    "openssl-binding",
    "tls12-session-resumption"
]
openssl102u = [
    "openssl/vendored-openssl102u", "openssl/weak-crypto", # We want to allow weak-crypto for FREAK
    "openssl-binding",
    "tls12-session-resumption"
]
# Some LibreSSL version
libressl = [
    "openssl/vendored-libressl",
    "tls13", # Supported features by openssl111
    "tls12-session-resumption",
    "claims",
    "openssl-binding",
    "transcript-extraction",
]

wolfssl430 = [
    "wolfssl-sys/vendored-wolfssl430",
    "tls13",
    "wolfssl-binding",
    "transcript-extraction",
    # Does not support any kind of resumption right now: https://github.com/trailofbits/tlspuffin/issues/12
    # FIXME: support "claims", "deterministic"
]

wolfssl510 = [
    "wolfssl-sys/vendored-wolfssl510",
    "tls13",
    "wolfssl-binding",
    "tls12-session-resumption",
    "tls13-session-resumption",
    "transcript-extraction",
    "client-authentication-transcript-extraction"
    # FIXME: support "claims", "deterministic"
]

wolfssl520 = [
    "wolfssl-sys/vendored-wolfssl520",
    "tls13",
    "wolfssl-binding",
    "tls12-session-resumption",
    "tls13-session-resumption",
    "transcript-extraction",
    "client-authentication-transcript-extraction"
    # FIXME: support "claims", "deterministic"
]

wolfssl530 = [
    "wolfssl-sys/vendored-wolfssl530",
    "tls13",
    "wolfssl-binding",
    "tls12-session-resumption",
    "tls13-session-resumption",
    "transcript-extraction",
    "client-authentication-transcript-extraction"
    # FIXME: support "claims", "deterministic"
]

wolfssl540 = [
    "wolfssl-sys/vendored-wolfssl540",
    "tls13",
    "wolfssl-binding",
    "tls12-session-resumption",
    "tls13-session-resumption",
    "transcript-extraction",
    "client-authentication-transcript-extraction"
    # FIXME: support "claims", "deterministic"
]


# Logs each execution of __sanitizer_cov_trace_pc_guard*
sancov_pcguard_log = []
# Uses libafl for the instrumentation. sancov_pcguard_log and sancov_libafl are mutally exclusive
sancov_libafl = ["libafl_targets/sancov_pcguard_hitcounts"]
# Enables ASAN
asan = ["openssl/asan", "wolfssl-sys/asan"]

# WolfSSL bindings are used
wolfssl-binding = ["wolfssl-sys", "foreign-types-shared", "foreign-types", "bitflags"]
# OpenSSL bindings are used
openssl-binding = ["openssl", "foreign-types-shared"]

# PUT supports TLS 1.3
tls13 = []
# PUT supports session resumption through Tickets and PSK
tls13-session-resumption = []
# PUT supports session resumption through RFC5077
tls12-session-resumption = []
# PUT is determinisitic
deterministic = []
# Require the PUT to implement the claim-interface.h
claims = []
# Whether transcript extraction is supported. This is needed for simplified traces.
transcript-extraction = []
# PUT exposes the required transcripts which are required for client authentication
client-authentication-transcript-extraction = []

introspection = ["libafl/introspection"]

[dependencies]
# TLS
# Custom work because:
#   * Message is cloneable
#   * Disabled logical checks during parsing of messages
#   * All modules exposed
rustls = { path = "../deps/rust-rustls/rustls" }
webpki = { version = "0.22.0", features = ["alloc", "std"] }
ring = { version = "0.16.20", features = ["std"] }

# OpenSSL
# Uses build scripts from './openssl-src'
openssl = { path = "../deps/rust-openssl/openssl", features = ["sancov"], optional = true }
foreign-types-shared = { version = "0.1.1", optional = true }
security-claims = { path = "../tlspuffin-claims", optional = false }

# WolfSSL
wolfssl-sys = { path = "../deps/wolfssl-sys", features = ["sancov"], optional = true }
foreign-types = { version = "0.5.0", optional = true }
bitflags = { version = "1.3.2", optional = true }

# LibAFL
libafl = { git = "https://github.com/AFLplusplus/LibAFL.git", rev = "2e746bf439629e4fe8fa47cf9f39acd1395c828f" }
# libafl_derive = "0.7.1"
libafl_targets = { git = "https://github.com/AFLplusplus/LibAFL.git", rev = "2e746bf439629e4fe8fa47cf9f39acd1395c828f" }

# Logging
log = "0.4.17"
log4rs = "1.1.1"

# Other Dependencies
libc = { version = "0.2.126" }
clap = { version = "3.1.18", features = ["cargo"] }
hex = "0.4.3"
rand = "0.8.5"
itertools = "0.10.3"
smallvec = "1.8.1"
serde = { version = "1.0.137", features = ["derive"] }
serde_json = "1.0.81"
postcard = { version = "0.7.3", features = ["alloc"] }
once_cell = "1.12.0"
chrono = "0.4.19"
cfg-if = "1.0.0"

[dev-dependencies]
criterion = "0.3.5"
test-log = "0.2.10"
env_logger = "0.9.0"
nix = "0.24.1"
tempfile = "3.3.0"

[[bench]]
name = "benchmark"
harness = false

[[bin]]
name = "tlspuffin"
path = "src/main.rs"
